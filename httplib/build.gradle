apply plugin: 'com.android.library'

android {
    compileSdkVersion 28


    lintOptions {
        abortOnError false
    }

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}
ext.rxandroid_version = '2.3.0'
dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    //retrofit
    api 'com.squareup.retrofit2:retrofit:2.8.1'
    //retrofit添加Json解析返回数据
    api 'com.squareup.retrofit2:converter-gson:2.8.1'
    //Rxjava
    api 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'


    api 'io.reactivex.rxjava2:rxandroid:2.1.0'
    api 'io.reactivex.rxjava2:rxjava:2.2.9'

    api 'com.trello.rxlifecycle2:rxlifecycle-components:2.1.0'
    api 'com.squareup.okhttp3:logging-interceptor:4.7.1'
}

apply plugin: 'com.novoda.bintray-release'//添加

publish {
    userOrg = 'antelope001'    //注册时候的用户名
    groupId = 'com.zmkj'//   //compile引用时的第1部分
    artifactId = 'myhttp'////发布到JCenter上的项目名字，compile引用时的第2部分项目名
    uploadName = 'myhttp'//为上传后，在bintray显示的名字。
    publishVersion = '1.0.0'//版本号 ，compile引用时的最后部分，下次更新是只需要更改版本号即可
    desc = 'the myhttp demo'//描述，不重要
    website = 'https://github.com/lijianjun001/VVMM'  //项目的GitHub网站
    licences = ['Apache-2.0']
}


task deleteOldJar(type: Delete) {//生成jar包
    delete 'build/outputs/okhttp.jar'
}

task exportJar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('build/libs/')
    include('classes.jar')
    rename ('classes.jar', 'okhttp.jar')
}

exportJar.dependsOn(deleteOldJar, build)